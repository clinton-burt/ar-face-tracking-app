#version 400
layout (location = 0) in vec3 VertexPosition;
layout (location = 1) in vec3 VertexNormal;
layout (location = 2) in vec2 VertexTexCoord;

out vec3 Position;
out vec3 Normal;
out vec2 TexCoord;
out vec2 FaceTexCoord;


uniform mat4 ModelViewMatrix;
uniform mat4 ProjectionMatrix;

uniform mat3 FaceTextureTransformMatrix;

uniform vec2 FaceTextureScale;

uniform vec2 AppliedFaceTextureCenter;
uniform vec2 ModelFaceTextureCenter;

void main()
{
 mat4 mvp= ProjectionMatrix * ModelViewMatrix;
 vec4 tnorm = ModelViewMatrix * vec4(VertexNormal,0.0) ;
 Normal = normalize(vec3(tnorm));
 Position = vec3( ModelViewMatrix * vec4(VertexPosition,1.0) );
 gl_Position = mvp * vec4(VertexPosition,1.0);
 
 
 vec2 faceShift = AppliedFaceTextureCenter- ModelFaceTextureCenter;
 
 vec2 faceTexCoord = VertexTexCoord + faceShift;
 
 vec2 scaledShiftedTexCoord = (faceTexCoord - AppliedFaceTextureCenter);
 
 
 scaledShiftedTexCoord = (FaceTextureTransformMatrix * vec3(scaledShiftedTexCoord, 1.0)).xy;
 
 scaledShiftedTexCoord.x = scaledShiftedTexCoord.x * FaceTextureScale.x;
 scaledShiftedTexCoord.y = scaledShiftedTexCoord.y * FaceTextureScale.y;
 
 scaledShiftedTexCoord = scaledShiftedTexCoord + AppliedFaceTextureCenter;
 
 FaceTexCoord = scaledShiftedTexCoord;
 
 TexCoord = VertexTexCoord;

}