#version 400
layout (location = 0) in vec3 VertexPosition;
layout (location = 1) in vec3 VertexNormal;
layout (location = 2) in vec2 VertexTexCoord;

out vec3 Position;
out vec3 Normal;
out vec2 TexCoord;
out float rotatedZ;
out float originalY;

uniform mat4 ModelViewMatrix;
uniform mat4 ProjectionMatrix;
uniform vec3 ZRotation;

void main()
{
	mat4 mvp = ProjectionMatrix * ModelViewMatrix;
	
	vec4 tnorm = ModelViewMatrix * vec4(VertexNormal,0.0);
	Normal = normalize(vec3(tnorm));
 
	Position = vec3( ModelViewMatrix * vec4(VertexPosition,1.0) );
	gl_Position = mvp * vec4(VertexPosition,1.0);
 
	TexCoord = VertexTexCoord;

	originalY = VertexPosition.y;
	rotatedZ = dot(ZRotation, VertexPosition);
	// last rotation matrix row multiplied by vertex position gives only Z of rotated vertex position
}